#! /bin/sh

OBS_PROJECT=isv:ownCloud:community
OBS_MIRRORS=http://download.opensuse.org/repositories

QUICK=true		# true: skip update and disk sanitation. false: do everything
mysql_pass=admin	# KEEP in sync with check-init.sh

if [ "$1" == "-h" ]; then
  echo "Usage: $0 [OBS_PROJECT]"
  echo "default OBS_PROJECT is '$OBS_PROJECT'"
  exit 1
fi
test -n "$1" && OBS_PROJECT=$1

cd $(dirname $0)

buildPlatform=xUbuntu_14.04	# matches an OBS target.
OBS_REPO=$OBS_MIRRORS/$(echo $OBS_PROJECT | sed -e 's@:@:/@g')/$buildPlatform

ocVersion=$(curl -s -L $OBS_REPO/Packages | grep -a1 'Package: owncloud$' | grep Version: | head -n 1 | sed -e 's/Version: /owncloud-/')
# ocVersion=ownCloud-8.1.0-6
vmBoxName=ubuntu/trusty64
vmBoxUrl=https://vagrantcloud.com/ubuntu/boxes/trusty64/versions/14.04/providers/virtualbox.box
imageName=$buildPlatform+$ocVersion
vmName=$(echo $ocVersion | sed -e 's/owncloud/oc8ee/')

cat > Vagrantfile << EOF
# CAUTION: Do not edit. Autogenerated contents.
# This Vagrantfile is created by $0 "$@"
#

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
 # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "$vmBoxName"
  config.vm.define "$vmName"		# need this, or the name is always 'default'

  # avoids 'stdin: is not a tty' error.
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'" 

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "$vmBoxUrl"

  config.vm.network :forwarded_port, guest: 80, host: 8888
  config.vm.provider :virtualbox do |vb|
      vb.name = "$buildPlatform+$ocVersion"
  end
	config.vm.provision "shell", inline: <<-SCRIPT
		set -x
		sudo useradd owncloud -m -p owncloud
		sudo useradd admin -m -p admin
		echo "admin\nadmin" | sudo passwd

		# prepare repositories
		wget -q $OBS_REPO/Release.key -O - | sudo apt-key add -
		sudo sh -c "echo 'deb $OBS_REPO /' >> /etc/apt/sources.list.d/owncloud.list"

		# attention: apt-get update is horribly slow when not connected to a tty.
		export DEBIAN_FRONTEND=noninteractive TERM=ansi LC_ALL=C
		sudo apt-get -q -y update
		$QUICK || sudo apt-get -q -y upgrade

		# install packages.
		sudo apt-get install -q -y language-pack-de

		sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password $mysql_pass'
		sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password $mysql_pass'
		sudo apt-get install -q -y owncloud php5-libsmbclient
		cd /var/www/owncloud/apps
		curl -sL localhost/owncloud/ | grep login || { curl -sL localhost/owncloud; exit 1; } # did not start at all??

		# prepare https
		sudo a2enmod ssl headers
		sudo a2dissite default-ssl
                sudo bash /vagrant/self-signed-ssl.sh


		# hook our scripts. Specifically the check-init.sh upon boot.
		sudo mkdir -p /var/scripts
		sudo cp /vagrant/*.sh /var/scripts
		chmod a+x /var/scripts/*.sh
		sudo sed -i -e 's@exit@/var/scripts/check-init.sh; exit@' /etc/rc.local
		
		# run the setup scripts (based on that user logs in with vagrant user and then becomes root)
		sudo bash /vagrant/welcome.sh
                sudo bash /vagrant/setup-when-root.sh
		
		# “zero out” the drive...
		$QUICK || sudo dd if=/dev/zero of=/EMPTY bs=1M
		$QUICK || sudo rm -f /EMPTY
	SCRIPT
end
EOF

# do all vagrant calls from within the working directory, or retrive
# vmID=$(vagrant global-status | grep $vmName | sed -e 's/ .*//')
vagrant up

vagrant halt

VBoxImagePath=$(VBoxManage list hdds | grep "/$imageName/")
#-->Location:       /home/$USER/VirtualBox VMs/ownCloud-8.1.1+xUbuntu_14.04/box-disk1.vmdk
VBoxImagePath=/${VBoxImagePath#*/}	# delete Location: prefix
cp "$VBoxImagePath" $imageName.vmdk
zip $imageName.vmdk.zip $imageName.vmdk
rm $imageName.vmdk

vagrant destroy -f
